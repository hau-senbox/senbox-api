// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/device/activate/{device_id}": {
            "put": {
                "description": "Aactivate Device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Activate Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/device/deactivate/{device_id}": {
            "put": {
                "description": "Deactivate Device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Deactivate Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/device/list": {
            "get": {
                "description": "Get Device List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Device List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DeviceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/device/{device_id}/update/": {
            "put": {
                "description": "Update Device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Device Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/form/:id": {
            "put": {
                "description": "Update Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Form RoleId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateFormResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/form/create": {
            "post": {
                "description": "Create Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create Form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SaveFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SaveFormResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/form/delete/:id": {
            "delete": {
                "description": "Delete Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Form RoleId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/form/list": {
            "get": {
                "description": "Get Forms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Forms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFormListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms/import": {
            "post": {
                "description": "Import Forms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Forms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms/import/partially": {
            "post": {
                "description": "Import Forms Partially",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Forms Partially",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Forms At Tab Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.importPartiallyFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms/search": {
            "get": {
                "description": "Search Forms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Search Forms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFormListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms/sign": {
            "post": {
                "description": "Import Sign Up Forms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Sign Up Forms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms2/import": {
            "post": {
                "description": "Import Forms2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Forms2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms3/import": {
            "post": {
                "description": "Import Forms3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Forms3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/forms4/import": {
            "post": {
                "description": "Import Forms4",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Forms4",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/frontend/device/:device_id": {
            "post": {
                "description": "Update Device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Frontend"
                ],
                "summary": "Update Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Device Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ModifyDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/login": {
            "post": {
                "description": "login using loginId and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve a token",
                "parameters": [
                    {
                        "description": "Login Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginInputReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/me/new-password": {
            "put": {
                "description": "Change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Change password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.changePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.changePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/monitor/google-api": {
            "get": {
                "description": "Get Google API Monitoring",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring"
                ],
                "summary": "Get Google API Monitoring",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.responseGoogleAPIRequest"
                        }
                    }
                }
            }
        },
        "/v1/admin/redirect-url/:id": {
            "put": {
                "description": "Update Redirect Url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Redirect Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Redirect Url RoleId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Redirect Url Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateRedirectUrlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateRedirectUrlResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redirect Url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redirect Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Redirect Url RoleId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/redirect-url/create": {
            "post": {
                "description": "Create redirect url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create redirect url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SaveRedirectUrlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SaveRedirectUrlResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/redirect-url/import": {
            "post": {
                "description": "Import Redirect Urls",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Redirect Urls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Redirect Url Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportRedirectUrlsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/redirect-url/import/partially": {
            "post": {
                "description": "Import Partially Redirect Urls",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Partially Redirect Urls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Partially Redirect Urls Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.importPartiallyURLsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/redirect-url/list": {
            "get": {
                "description": "Get Redirect Url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redirect Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Get Redirect Url List Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetRedirectUrlListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetRedirectUrlListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/": {
            "get": {
                "description": "Retrieve settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSettingsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/api-distributer": {
            "post": {
                "description": "Update Distributer Preset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Distributer Preset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Distributor Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateDistributerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/code-counting-data": {
            "post": {
                "description": "Update Code Counting Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Code Counting Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Code Counting Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCodeCountingSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/email-history": {
            "post": {
                "description": "Update Email History Settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Email History Settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Email History Setting Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateEmailHistorySettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/label/name": {
            "post": {
                "description": "Set Setting Label Name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Set Setting Label Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Setting Name Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateSettingNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/logo-refresh-interval": {
            "get": {
                "description": "Get Logo Refresh Interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Logo Refresh Interval",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.getLogoRefreshIntervalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Setup Logo Refresh Interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Setup Logo Refresh Interval",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Setup Logo Refresh Interval Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetupLogoRefreshIntervalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/output-sheet": {
            "post": {
                "description": "Create or Update Output Setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create or Update Output Setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateOutputSubmissionSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/output-summary": {
            "post": {
                "description": "Create or Update Output Summary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create or Update Output Summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateOutputSummarySettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/output-template": {
            "post": {
                "description": "Update Output Template Settings for Teacher godoc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Output Template Settings for Teacher godoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Output Template Settings godoc",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateOutputTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/output-template-teacher": {
            "post": {
                "description": "Update Output Template Settings for Teacher godoc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Output Template Settings for Teacher godoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Output Template Settings for Teacher godoc",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateOutputTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/registration-form": {
            "post": {
                "description": "Update Registration Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Registration Form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Registration Form",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateRegistrationSpreadsheetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/registration-preset": {
            "post": {
                "description": "Update Registration Preset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Registration Preset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Registration Preset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateRegistrationPresetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/registration-submission": {
            "post": {
                "description": "Update Registration Submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Registration Submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Registration Submission",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateRegistrationSpreadsheetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/sign-up-button-1": {
            "post": {
                "description": "Update Sign Up Button 1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Sign Up Button 1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Sign Up Button 1",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateSignUpTextButtonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/sign-up-button-2": {
            "post": {
                "description": "Update Sign Up Button 2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Sign Up Button 2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Sign Up Button 2",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateSignUpTextButtonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/sign-up-button-3": {
            "post": {
                "description": "Update Sign Up Button 3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Sign Up Button 3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Sign Up Button 3",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateSignUpTextButtonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/sign-up-button-4": {
            "post": {
                "description": "Update Sign Up Button 4",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Sign Up Button 4",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Sign Up Button 4",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateSignUpTextButtonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/sync-devices": {
            "post": {
                "description": "Sync Devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Sync Devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Sync Devices Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SyncDevicesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/todo/import": {
            "post": {
                "description": "Import ToDos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import ToDos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/todo/import/partially": {
            "post": {
                "description": "Import Partially ToDos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Import Partially ToDos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Import Partially ToDo Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ImportPartiallyTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/user/create": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/users": {
            "get": {
                "description": "Get user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get user list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/buttons/notification": {
            "post": {
                "description": "Send Notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Send Notification Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/buttons/screen": {
            "get": {
                "description": "Get Screen Buttons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Screen Buttons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetScreenButtonsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/buttons/top": {
            "get": {
                "description": "Get Top Buttons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Top Buttons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetScreenButtonsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/code-counting/reset": {
            "put": {
                "description": "Reset Code Counting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Reset Code Counting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Reset Code Counting Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ResetCodeCountingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/brand-logo": {
            "get": {
                "description": "Brand Logo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Brand Logo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.getBrandLogoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/discover": {
            "post": {
                "description": "Discover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Discover",
                "parameters": [
                    {
                        "description": "Discover Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.discoverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.discoverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "461": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/init": {
            "post": {
                "description": "Init a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Register a new device",
                "parameters": [
                    {
                        "description": "Init Device Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AuthorizedDeviceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/messages": {
            "get": {
                "description": "Setting's Message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Setting's Message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSettingMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/messaging/fcm/register": {
            "post": {
                "description": "Register FCM Device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Register FCM Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Register FCM Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterFCMRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/mode-l": {
            "get": {
                "description": "Get Status L",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Status L",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.getModeLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/note/": {
            "put": {
                "description": "Save device's Note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Save device's Note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Take Note Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TakeNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/refresh-token": {
            "post": {
                "description": "Refresh Access Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Refresh Access Token",
                "parameters": [
                    {
                        "description": "Refresh Token Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.refreshAccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.refreshAccessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/reserve": {
            "post": {
                "description": "Reserve Device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Reserve Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "X-API-KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Reserve Device Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reserveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.reserveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/send/email": {
            "post": {
                "description": "Send An Email godoc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Send An Email godoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Send Email request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/sign-up": {
            "get": {
                "description": "Get Sign Up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Sign Up",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.getSignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/sign-up/form": {
            "get": {
                "description": "Get Registration Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Registration Form",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.QuestionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Sign Up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Sign Up",
                "parameters": [
                    {
                        "description": "Sign Up Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubmitFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/sign-up/pre-set": {
            "get": {
                "description": "Get Preset Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Preset Form",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.getPresetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/status": {
            "get": {
                "description": "Get Device Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Device Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.getDeviceStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/time-table": {
            "get": {
                "description": "Get Time Table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get Time Table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTimeTableResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/device/update-info": {
            "put": {
                "description": "Update Device Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update Device Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Device Info Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateDeviceInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/form": {
            "get": {
                "description": "Get Form's Questions by QR Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form"
                ],
                "summary": "Get Form's Questions by QR Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "QR Code",
                        "name": "qr_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.QuestionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/form/device/sign-up": {
            "get": {
                "description": "Get  Device's Sign Up Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get  Device's Sign Up Form",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.GetDeviceSignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Device's Sign Up Form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update Device's Sign Up Form",
                "parameters": [
                    {
                        "description": "Update Device's Sign Up Form Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubmitFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/form/submission/last": {
            "get": {
                "description": "Get last submission from a form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get last submission from a form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.getLastSubmissionFromFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/form/submit": {
            "post": {
                "description": "Submit a form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Submit a form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Send Email Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubmitFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/question/buttons": {
            "get": {
                "description": "Get Button Question Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Get Button Question Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Question RoleId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetScreenButtonsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/question/show-pics": {
            "get": {
                "description": "Get Show Pics Question Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Get Show Pics Question Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Question RoleId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetShowPicsQuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/redirect-url": {
            "get": {
                "description": "Get Redirect Url by QR Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redirect Url"
                ],
                "summary": "Get Redirect Url by QR Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "QR Code",
                        "name": "qrcode",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetRedirectUrlResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/todo": {
            "get": {
                "description": "Get ToDo List By QR Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToDo"
                ],
                "summary": "Get ToDo List By QR Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QR Code",
                        "name": "qr_code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.toDoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Mark ToDo As Done",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToDo"
                ],
                "summary": "Mark ToDo As Done",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Mark ToDo As Done Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.markToDoAsDoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/todo/task/log": {
            "put": {
                "description": "Log Task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToDo"
                ],
                "summary": "Log Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Log Task Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        },
        "/v1/todo/tasks": {
            "put": {
                "description": "Update ToDo's Taks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToDo"
                ],
                "summary": "Update ToDo's Tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Todo's Tasks Params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateToDoTasksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SucceedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.FailedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.GetDeviceSignUpResponse": {
            "type": "object",
            "required": [
                "form_note"
            ],
            "properties": {
                "form_note": {
                    "type": "string"
                }
            }
        },
        "controller.changePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "controller.changePasswordResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.discoverRequest": {
            "type": "object",
            "required": [
                "device_id"
            ],
            "properties": {
                "device_id": {
                    "type": "string"
                }
            }
        },
        "controller.discoverResponse": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "user_info_1": {
                    "type": "string"
                },
                "user_info_2": {
                    "type": "string"
                },
                "user_info_3": {
                    "type": "string"
                }
            }
        },
        "controller.getBrandLogoResponse": {
            "type": "object",
            "required": [
                "image_url"
            ],
            "properties": {
                "image_url": {
                    "type": "string"
                }
            }
        },
        "controller.getDeviceStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetDeviceStatusResponseData"
                }
            }
        },
        "controller.getLastSubmissionFromFormRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "controller.getLogoRefreshIntervalResponse": {
            "type": "object",
            "required": [
                "interval",
                "title"
            ],
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.getModeLResponse": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.getPresetResponse": {
            "type": "object",
            "properties": {
                "value_12": {
                    "type": "string"
                }
            }
        },
        "controller.getSignUpResponse": {
            "type": "object",
            "required": [
                "button_1",
                "button_2",
                "button_3",
                "button_4"
            ],
            "properties": {
                "button_1": {
                    "$ref": "#/definitions/controller.getSignUpResponseTextButton"
                },
                "button_2": {
                    "$ref": "#/definitions/controller.getSignUpResponseTextButton"
                },
                "button_3": {
                    "$ref": "#/definitions/controller.getSignUpResponseTextButton"
                },
                "button_4": {
                    "$ref": "#/definitions/controller.getSignUpResponseTextButton"
                }
            }
        },
        "controller.getSignUpResponseTextButton": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.importPartiallyFormRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url",
                "tab_name"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                },
                "tab_name": {
                    "type": "string"
                }
            }
        },
        "controller.importPartiallyURLsRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url",
                "tab_name"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                },
                "tab_name": {
                    "type": "string"
                }
            }
        },
        "controller.markToDoAsDoneRequest": {
            "type": "object",
            "required": [
                "qr_code"
            ],
            "properties": {
                "qr_code": {
                    "type": "string"
                },
                "select": {
                    "type": "string"
                },
                "task_index": {
                    "type": "integer"
                }
            }
        },
        "controller.refreshAccessTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "controller.refreshAccessTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controller.refreshAccessTokenResponseData"
                }
            }
        },
        "controller.refreshAccessTokenResponseData": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "controller.reserveRequest": {
            "type": "object",
            "required": [
                "app_version",
                "device_id"
            ],
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                }
            }
        },
        "controller.reserveResponse": {
            "type": "object"
        },
        "controller.responseGoogleAPIRequest": {
            "type": "object",
            "properties": {
                "total_request_get_screen_button": {
                    "type": "integer"
                },
                "total_request_get_top_button": {
                    "type": "integer"
                },
                "total_request_import_form": {
                    "type": "integer"
                },
                "total_request_import_to_do": {
                    "type": "integer"
                },
                "total_request_init_device": {
                    "type": "integer"
                }
            }
        },
        "controller.task": {
            "type": "object",
            "required": [
                "due_date",
                "index",
                "name",
                "selected",
                "selection",
                "value"
            ],
            "properties": {
                "due_date": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "selected": {
                    "type": "string"
                },
                "selection": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.toDoResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/controller.toDoResponseData"
                }
            }
        },
        "controller.toDoResponseData": {
            "type": "object",
            "required": [
                "name",
                "tasks",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.task"
                    }
                },
                "type": {
                    "$ref": "#/definitions/value.ToDoType"
                }
            }
        },
        "controller.updateDeviceInfoRequest": {
            "type": "object",
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "user_info_3": {
                    "type": "string"
                }
            }
        },
        "controller.updateDistributerRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "controller.updateRegistrationPresetRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "controller.updateRegistrationSpreadsheetRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "controller.updateSignUpTextButtonRequest": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.Answer": {
            "type": "object",
            "required": [
                "answer",
                "question_id"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                },
                "messaging": {
                    "$ref": "#/definitions/request.Messaging"
                },
                "question_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.GetRedirectUrlListRequest": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "request.ImportFormRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "auto": {
                    "type": "boolean"
                },
                "interval_in_minutes": {
                    "type": "integer"
                },
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.ImportPartiallyTodoRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url",
                "tab_name"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                },
                "tab_name": {
                    "type": "string"
                }
            }
        },
        "request.ImportRedirectUrlsRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "auto": {
                    "type": "boolean"
                },
                "interval_in_minutes": {
                    "type": "integer"
                },
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.LogTaskRequest": {
            "type": "object",
            "required": [
                "due_date",
                "name",
                "qr_code",
                "type"
            ],
            "properties": {
                "due_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.LoginInputReq": {
            "type": "object",
            "required": [
                "loginId",
                "password"
            ],
            "properties": {
                "loginId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.Messaging": {
            "type": "object",
            "required": [
                "email",
                "questionType",
                "value3"
            ],
            "properties": {
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "messageBox": {
                    "type": "string"
                },
                "questionType": {
                    "type": "string"
                },
                "value3": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.ModifyDeviceRequest": {
            "type": "object",
            "properties": {
                "app_setting_spreadsheet_url": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "output_spreadsheet_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.RegisterDeviceRequest": {
            "type": "object",
            "required": [
                "device_uuid",
                "primary",
                "secondary",
                "tertiary"
            ],
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "device_uuid": {
                    "type": "string"
                },
                "input_mode": {
                    "type": "string"
                },
                "primary": {
                    "$ref": "#/definitions/request.RegisterDeviceUser"
                },
                "profile_picture_url": {
                    "type": "string"
                },
                "secondary": {
                    "$ref": "#/definitions/request.RegisterDeviceUser"
                },
                "tertiary": {
                    "$ref": "#/definitions/request.RegisterDeviceUser"
                }
            }
        },
        "request.RegisterDeviceUser": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "request.RegisterFCMRequest": {
            "type": "object",
            "required": [
                "device_id",
                "device_token",
                "type"
            ],
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/value.DeviceType"
                }
            }
        },
        "request.ResetCodeCountingRequest": {
            "type": "object",
            "required": [
                "prefix",
                "reset_to"
            ],
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "reset_to": {
                    "type": "integer"
                }
            }
        },
        "request.SaveFormRequest": {
            "type": "object",
            "required": [
                "note",
                "spreadsheet_url"
            ],
            "properties": {
                "note": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.SaveRedirectUrlRequest": {
            "type": "object",
            "required": [
                "qr_code",
                "target_url"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "target_url": {
                    "type": "string"
                }
            }
        },
        "request.SendEmailRequest": {
            "type": "object",
            "required": [
                "body",
                "subject",
                "to"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "request.SendNotificationRequest": {
            "type": "object",
            "required": [
                "device_id",
                "title"
            ],
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.SetupLogoRefreshIntervalRequest": {
            "type": "object",
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.SubmitFormRequest": {
            "type": "object",
            "required": [
                "answers",
                "qr_code"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Answer"
                    }
                },
                "device_id": {
                    "type": "string"
                },
                "opened_at": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                }
            }
        },
        "request.SyncDevicesRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "auto": {
                    "type": "boolean"
                },
                "interval_in_minutes": {
                    "type": "integer"
                },
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.TakeNoteRequest": {
            "type": "object",
            "required": [
                "note"
            ],
            "properties": {
                "note": {
                    "type": "string"
                }
            }
        },
        "request.UpdateCodeCountingSettingRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.UpdateDeviceRequest": {
            "type": "object",
            "properties": {
                "button_url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "screen_button": {
                    "$ref": "#/definitions/request.UpdateDeviceRequestScreenButton"
                },
                "user_info": {
                    "$ref": "#/definitions/request.UpdateDeviceRequestUserInfo"
                }
            }
        },
        "request.UpdateDeviceRequestScreenButton": {
            "type": "object",
            "required": [
                "button_type",
                "button_value"
            ],
            "properties": {
                "button_type": {
                    "type": "string",
                    "enum": [
                        "scan",
                        "list"
                    ]
                },
                "button_value": {
                    "type": "string"
                }
            }
        },
        "request.UpdateDeviceRequestUserInfo": {
            "type": "object",
            "required": [
                "user_info_1",
                "user_info_2",
                "user_info_3"
            ],
            "properties": {
                "user_info_1": {
                    "type": "string"
                },
                "user_info_2": {
                    "type": "string"
                },
                "user_info_3": {
                    "type": "string"
                }
            }
        },
        "request.UpdateEmailHistorySettingsRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.UpdateFormRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UpdateOutputSubmissionSettingsRequest": {
            "type": "object",
            "required": [
                "folder_url"
            ],
            "properties": {
                "folder_url": {
                    "type": "string"
                },
                "sheet_name": {
                    "type": "string"
                }
            }
        },
        "request.UpdateOutputSummarySettingsRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.UpdateOutputTemplateRequest": {
            "type": "object",
            "required": [
                "spreadsheet_url"
            ],
            "properties": {
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "request.UpdateRedirectUrlRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UpdateSettingNameRequest": {
            "type": "object",
            "properties": {
                "api_distributer_setting": {
                    "type": "string"
                },
                "code_counting_data_setting": {
                    "type": "string"
                },
                "email_setting": {
                    "type": "string"
                },
                "form_setting_1": {
                    "type": "string"
                },
                "form_setting_2": {
                    "type": "string"
                },
                "form_setting_3": {
                    "type": "string"
                },
                "form_setting_4": {
                    "type": "string"
                },
                "import_sign_up_forms_setting": {
                    "type": "string"
                },
                "output_setting": {
                    "type": "string"
                },
                "output_template_for_teacher_setting": {
                    "type": "string"
                },
                "output_template_setting": {
                    "type": "string"
                },
                "registration_form_setting": {
                    "type": "string"
                },
                "registration_preset_setting": {
                    "type": "string"
                },
                "registration_submission_setting": {
                    "type": "string"
                },
                "sign_up_button_1_setting": {
                    "type": "string"
                },
                "sign_up_button_2_setting": {
                    "type": "string"
                },
                "sign_up_button_3_setting": {
                    "type": "string"
                },
                "sign_up_button_4_setting": {
                    "type": "string"
                },
                "summary_setting": {
                    "type": "string"
                },
                "sync_devices_setting": {
                    "type": "string"
                },
                "sync_to_dos_setting": {
                    "type": "string"
                },
                "url_setting": {
                    "type": "string"
                }
            }
        },
        "request.UpdateTask": {
            "type": "object",
            "required": [
                "due_date",
                "name",
                "selected",
                "selection",
                "value"
            ],
            "properties": {
                "due_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "selected": {
                    "type": "string"
                },
                "selection": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.UpdateToDoTasksRequest": {
            "type": "object",
            "required": [
                "qr_code",
                "tasks"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.UpdateTask"
                    }
                }
            }
        },
        "response.AuthorizedDeviceResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.AuthorizedDeviceResponseData"
                }
            }
        },
        "response.AuthorizedDeviceResponseData": {
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "response.Cause": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.CreateUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CreateUserResponseData"
                }
            }
        },
        "response.CreateUserResponseData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.DeviceListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DeviceListResponseData"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.DeviceListResponseData": {
            "type": "object",
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "attribute_1": {
                    "type": "string"
                },
                "attribute_2": {
                    "type": "string"
                },
                "attribute_3": {
                    "type": "string"
                },
                "button_url": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_uuid": {
                    "type": "string"
                },
                "input_mode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "screen_button_type": {
                    "$ref": "#/definitions/value.ScreenButtonType"
                },
                "screen_button_value": {
                    "type": "string"
                },
                "spreadsheet_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "teacher_spreadsheet_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.FailedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/response.Cause"
                }
            }
        },
        "response.GetDeviceStatusResponseData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.GetFormListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetFormListResponseData"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.GetFormListResponseData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "spreadsheet_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GetRedirectUrlListResponse": {
            "type": "object",
            "required": [
                "data",
                "paging"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetRedirectUrlListResponseData"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.GetRedirectUrlListResponseData": {
            "type": "object",
            "required": [
                "created_at",
                "hash_password",
                "hint",
                "id",
                "password",
                "qr_code",
                "target_url",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "hash_password": {
                    "type": "string"
                },
                "hint": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "target_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GetRedirectUrlResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetRedirectUrlListResponseData"
                }
            }
        },
        "response.GetScreenButtonsItem": {
            "type": "object",
            "properties": {
                "background_color": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.GetScreenButtonsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetScreenButtonsResponseData"
                }
            }
        },
        "response.GetScreenButtonsResponseData": {
            "type": "object",
            "properties": {
                "buttons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetScreenButtonsItem"
                    }
                }
            }
        },
        "response.GetSettingMessageItem": {
            "type": "object",
            "required": [
                "description",
                "message"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetSettingMessageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetSettingMessageResponseData"
                }
            }
        },
        "response.GetSettingMessageResponseData": {
            "type": "object",
            "required": [
                "font_size",
                "messages"
            ],
            "properties": {
                "font_size": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetSettingMessageItem"
                    }
                }
            }
        },
        "response.GetSettingsResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetSettingsResponseData"
                }
            }
        },
        "response.GetSettingsResponseAPIDistributor": {
            "type": "object",
            "required": [
                "setting_name",
                "spread_sheet_url"
            ],
            "properties": {
                "setting_name": {
                    "type": "string"
                },
                "spread_sheet_url": {
                    "type": "string"
                }
            }
        },
        "response.GetSettingsResponseData": {
            "type": "object",
            "properties": {
                "api_distributer": {
                    "$ref": "#/definitions/response.GetSettingsResponseAPIDistributor"
                },
                "code_counting_data": {
                    "$ref": "#/definitions/response.GetSettingsResponseAPIDistributor"
                },
                "email_history": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "import_forms_setting": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "import_forms_setting_2": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "import_forms_setting_3": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "import_forms_setting_4": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "import_redirect_urls_setting": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "import_signup_forms": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "import_todo_list_setting": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                },
                "output": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSubmission"
                },
                "output_template": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "output_template_for_teacher": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "registration_form": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "registration_preset": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "registration_submission": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "sign_up_button_1": {
                    "$ref": "#/definitions/response.GetSettingsResponseTextButton"
                },
                "sign_up_button_2": {
                    "$ref": "#/definitions/response.GetSettingsResponseTextButton"
                },
                "sign_up_button_3": {
                    "$ref": "#/definitions/response.GetSettingsResponseTextButton"
                },
                "sign_up_button_4": {
                    "$ref": "#/definitions/response.GetSettingsResponseTextButton"
                },
                "summary": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataSummary"
                },
                "sync_devices": {
                    "$ref": "#/definitions/response.GetSettingsResponseDataImport"
                }
            }
        },
        "response.GetSettingsResponseDataImport": {
            "type": "object",
            "required": [
                "auto",
                "interval_in_minutes",
                "setting_name",
                "spread_sheet_url"
            ],
            "properties": {
                "auto": {
                    "type": "boolean"
                },
                "interval_in_minutes": {
                    "type": "integer"
                },
                "setting_name": {
                    "type": "string"
                },
                "spread_sheet_url": {
                    "type": "string"
                }
            }
        },
        "response.GetSettingsResponseDataSubmission": {
            "type": "object",
            "required": [
                "folder_url",
                "setting_name"
            ],
            "properties": {
                "folder_url": {
                    "type": "string"
                },
                "setting_name": {
                    "type": "string"
                }
            }
        },
        "response.GetSettingsResponseDataSummary": {
            "type": "object",
            "required": [
                "setting_name",
                "spreadsheet_url"
            ],
            "properties": {
                "setting_name": {
                    "type": "string"
                },
                "spreadsheet_url": {
                    "type": "string"
                }
            }
        },
        "response.GetSettingsResponseTextButton": {
            "type": "object",
            "required": [
                "name",
                "setting_name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "setting_name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.GetShowPicsQuestionResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetShowPicsQuestionResponseData"
                }
            }
        },
        "response.GetShowPicsQuestionResponseData": {
            "type": "object",
            "required": [
                "photo_url"
            ],
            "properties": {
                "photo_url": {
                    "type": "string"
                }
            }
        },
        "response.GetTimeTableItem": {
            "type": "object",
            "required": [
                "color",
                "end_at",
                "link",
                "message",
                "notification",
                "picture",
                "start_at"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "end_at": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "notification": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "start_at": {
                    "type": "string"
                }
            }
        },
        "response.GetTimeTableResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetTimeTableResponseData"
                }
            }
        },
        "response.GetTimeTableResponseData": {
            "type": "object",
            "required": [
                "general_message",
                "number_of_items_per_time",
                "times"
            ],
            "properties": {
                "general_message": {
                    "type": "string"
                },
                "number_of_items_per_time": {
                    "type": "integer"
                },
                "times": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTimeTableItem"
                    }
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.LoginResponseData"
                }
            }
        },
        "response.LoginResponseData": {
            "type": "object",
            "properties": {
                "expired": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "response.Messaging": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "showMessageBox": {
                    "type": "boolean"
                },
                "value3": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.Pagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_page": {
                    "type": "integer"
                }
            }
        },
        "response.QuestionAttributes": {
            "type": "object",
            "properties": {
                "messaging": {
                    "$ref": "#/definitions/response.Messaging"
                },
                "number": {
                    "type": "integer"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "steps": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.QuestionListData": {
            "type": "object",
            "properties": {
                "answer_required": {
                    "type": "boolean"
                },
                "attributes": {
                    "$ref": "#/definitions/response.QuestionAttributes"
                },
                "enabled": {
                    "type": "boolean"
                },
                "order": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "question_id": {
                    "type": "string"
                },
                "question_type": {
                    "type": "string"
                }
            }
        },
        "response.QuestionListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.QuestionListResponseData"
                }
            }
        },
        "response.QuestionListResponseData": {
            "type": "object",
            "required": [
                "form_name",
                "questions"
            ],
            "properties": {
                "decrypt_password": {
                    "type": "string"
                },
                "form_name": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.QuestionListData"
                    }
                }
            }
        },
        "response.SaveFormResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.SaveFormResponseData"
                }
            }
        },
        "response.SaveFormResponseData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "spreadsheet_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.SaveRedirectUrlResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.SaveRedirectUrlResponseData"
                }
            }
        },
        "response.SaveRedirectUrlResponseData": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "qr_code",
                "target_url",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "target_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.SucceedResponse": {
            "type": "object",
            "properties": {
                "data": {}
            }
        },
        "response.UpdateFormResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetFormListResponseData"
                }
            }
        },
        "response.UpdateRedirectUrlResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetRedirectUrlListResponseData"
                }
            }
        },
        "response.UserListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserListResponseData"
                    }
                }
            }
        },
        "response.UserListResponseData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "value.DeviceType": {
            "type": "string",
            "enum": [
                "IOS",
                "ANDROID"
            ],
            "x-enum-varnames": [
                "DeviceTypeIOS",
                "DeviceTypeANDROID"
            ]
        },
        "value.ScreenButtonType": {
            "type": "string",
            "enum": [
                "scan",
                "list"
            ],
            "x-enum-varnames": [
                "ScreenButtonType_Scan",
                "ScreenButtonType_List"
            ]
        },
        "value.ToDoType": {
            "type": "string",
            "enum": [
                "assign",
                "compose"
            ],
            "x-enum-varnames": [
                "ToDoTypeAssign",
                "ToDoTypeCompose"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger Sen Master API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
